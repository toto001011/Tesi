kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
networking:
  kubeProxyMode: "ipvs"
nodes:
- role: control-plane
  kubeadmConfigPatches:
  - |
    apiVersion: kubeadm.k8s.io/v1beta2
    kind: ClusterConfiguration
    networking:
      podSubnet: "192.168.100.0/24"  # Sostituisci con la subnet fornita da Nebula


cat > nginx-service.yaml <<EOF
# nginx-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: LoadBalancer
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80


EOF
---
cat > balancer-config.yaml <<EOF
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: metallb-system
  name: config
data:
  config: |
    address-pools:
    - name: default
      protocol: layer2
      addresses:
      - 192.168.200.240-192.168.200.250

 
EOF


cat > balancer.yaml <<EOF
apiVersion: v1
kind: Service
metadata:
  name: control-plane-service
  namespace: kube-system  # Assicurati di specificare il namespace corretto per il control plane di Kubernetes
spec:
  selector:
    component: kube-apiserver  # Assicurati che il selettore sia appropriato per il tuo control plane
  ports:
    - protocol: TCP
      port: 6443  # Porta predefinita del control plane di Kubernetes
      targetPort: 6443
  type: LoadBalancer

EOF


cat > metallb-config.yaml <<EOF
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: first-pool
  namespace: metallb-system
spec:
  addresses:
  - 192.168.10.0/24
  - 192.168.9.1-192.168.9.5


EOF




cat > balancer.yaml <<EOF
apiVersion: v1
kind: Service
metadata:
  name: my-loadbalancer-service
spec:
  selector:
    app: my-app
  ports:
    - protocol: TCP
      port: 443
      targetPort: 443
  type: LoadBalancer


EOF


 
cat > capi-balancer.yaml <<EOF
apiVersion: v1
kind: Service
metadata:
  name: control-plane-service
  namespace: kube-system
spec:
  selector:
    component: kube-apiserver
  ports:
    - protocol: TCP
      port: 6443
  type: LoadBalancer


 
EOF




cat > ex1.yaml <<EOF
kind: Service
apiVersion: v1
metadata:
  name: foo-service
spec:
  type: LoadBalancer
  selector:
    app: http-echo
  ports:
  # Default port used by the image
  - port: 443
    targetPort: 443
    nodePort: 32430
EOF


