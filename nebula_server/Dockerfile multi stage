# STAGE 1: build Nebula
FROM golang:alpine AS builder

# Installazione dipendenze per Nebula
RUN apk update && apk upgrade && \
    apk add --no-cache bash git make cmake gcc musl-dev openssl-dev

# Clonazione e compilazione di Nebula
RUN git clone https://github.com/slackhq/nebula.git && \
    cd nebula && \
    make -j $(nproc) && \
    cp nebula /usr/local/bin/nebula_server


# STAGE 2: creazione dell'immagine finale
FROM alpine:latest
RUN ifconfig

# Copia dei file di configurazione necessari a Nebula
WORKDIR /nebula
COPY ./ca.key  /nebula/
COPY ./ca.crt /nebula/
COPY ./host.crt /nebula/
COPY ./host.key /nebula/
COPY ./config.yaml /nebula/

# Copia del binario Nebula compilato dallo stage 1
COPY --from=builder /usr/local/bin/nebula_server /usr/local/bin/nebula

# Installazione delle dipendenze necessarie a Nebula
RUN apk update && apk upgrade && \
    apk add --no-cache bash openssl

# Esposizione delle porte utilizzate da Nebula
EXPOSE 4242/tcp
EXPOSE 4242/udp
EXPOSE 4241/tcp
EXPOSE 4241/udp

# Impostazione del comando predefinito per avviare Nebula
CMD ["nebula", "-config", "/nebula/config.yaml"]

